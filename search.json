[{"path":"https://kaiaragaki.github.io/blotbench/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 blotbench authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kaiaragaki.github.io/blotbench/articles/usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"usage","text":"preparing western blots presentation, typical workflows one point usually involve cropping blots something like PhotoShop, GIMP, FIJI, etc. manipulation done separate program, usually best can terms reproducibility providing original, unmodified images along cropped version. fine - certainly convenient don’t blame anyone (particularly busy scientists). methods declaratively image manipulations R (particularly magick EBImage), aren’t nearly convenient real-time visual feedback typical photo-editing software - guess--render-repeat loop trying find perfect cropping geometry image without visual feedback tedious best, hard-sell ’re trying get others join reproducibility movement. blotbench attempts solve providing Shiny app within package perform rudimentary image manipulations visual feedback. app outputs code written create transformations (rather image ) declarative reproducible benefits script can reaped still leveraging convenience graphical interface. addition, blotbench introduces new object (wb object) can store row column annotation much like SummarizedExperiment. provides additional benefits intuitive indexing (allow treat blot image almost like data.frame) automatic annotation.","code":""},{"path":"https://kaiaragaki.github.io/blotbench/articles/usage.html","id":"creating-a-wb-object","dir":"Articles","previous_headings":"","what":"Creating a wb object","title":"usage","text":"wb object composed 4 components: imgs: vector image-magick images col_annot: data.frame containing lane annotation, one line column, top row referring left-lane row_annot: data.frame containing names protein blotted image. transforms: data.frame containing information detailing transformations performed image presentation. creating wb object, typically specify transforms outset, col_annot row_annot optional. bare minimum, need supply vector image-magick images. show full power blotbench though, ’m going supply arguments 1-3. First, let’s introduce images. experiment timecourse cells exposed drug (erdafitinib - FGFR inhibitor). blotted three proteins - TRAIL, PARP, Actin. PARP blot:  blotting PARP, probed blot TRAIL:  finally Actin:  ’re also going create column row annotations ’re . Column annotations probably involved, ’ll start . make column annotation, create data.frame one row per lane blot. columns represent experimental conditions. order rows order columns image manipulation. important, images mirrored - ’ll flip right way get image manipulation. Row annotation can supplied data.frame just one column - name - , much simply, character vector, ’ll . order match order images. , everything need:","code":"library(magick) #> Linking to ImageMagick 6.9.11.60 #> Enabled features: fontconfig, freetype, fftw, heic, lcms, pango, webp, x11 #> Disabled features: cairo, ghostscript, raw, rsvg #> Using 4 threads parp <- image_read(system.file(\"extdata\", \"parp.tif\", package = \"blotbench\")) plot(parp) trail <- image_read(system.file(\"extdata\", \"trail.tif\", package = \"blotbench\")) plot(trail) actin <- image_read(system.file(\"extdata\", \"actin.tif\", package = \"blotbench\")) plot(actin) ca <- data.frame(   drug = c(\"DMSO\", \"Erdafitinib\", \"Erdafitinib\", \"Erdafitinib\"),   time_hr = c(0, 24, 48, 72) ) wb <- wb(   imgs = c(parp, trail, actin),   col_annot = ca,   row_annot = c(\"PARP\", \"TRAIL\", \"Actin\") )"},{"path":"https://kaiaragaki.github.io/blotbench/articles/usage.html","id":"editing-blots","dir":"Articles","previous_headings":"","what":"Editing blots","title":"usage","text":"Now blot object, can call wb_visual_edit help us generate code transform blots: editing individual blots clicking “done”, app quit code write transformations appear console: , get: Note transforms applied: imgs still width height updating transformations. allows re-edit blots desire. transformations can manually applied using apply_transforms, also automatically applied upon present_wb:  ’ll note annotations automatically applied - isn’t nice! want exclude certain proteins, can index row just like data.frame:  can additionally select lanes though columns:  practice, allow pretty un-recommended things - providing code, least ’s auditable.","code":"wb_visual_edit(wb) Paste in your script to crop the images as seen in the app: transforms(wb) <- tibble::tribble(   ~width, ~height, ~xpos, ~ypos, ~rotate, ~flip,     190L,     60L,   269,    51,    -0.5,  TRUE,     190L,     50L,   238,   276,       0,  TRUE,     190L,     30L,   283,   206,       0,  TRUE   ) transforms(wb) <- tibble::tribble(   ~width, ~height, ~xpos, ~ypos, ~rotate, ~flip,     190L,     60L,   269,    51,    -0.5,  TRUE,     190L,     50L,   238,   276,       0,  TRUE,     190L,     30L,   283,   206,       0,  TRUE   ) wb #> $imgs #> # A tibble: 3 × 7 #>   format width height colorspace matte filesize density #>   <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>   #> 1 TIFF     696    520 Gray       FALSE   728306 83x83   #> 2 TIFF     696    520 Gray       FALSE   728306 83x83   #> 3 TIFF     696    520 Gray       FALSE   728306 83x83   #>  #> $col_annot #>          drug time_hr #> 1        DMSO       0 #> 2 Erdafitinib      24 #> 3 Erdafitinib      48 #> 4 Erdafitinib      72 #>  #> $row_annot #>    name #> 1  PARP #> 2 TRAIL #> 3 Actin #>  #> $transforms #> # A tibble: 3 × 6 #>   width height  xpos  ypos rotate flip  #>   <int>  <int> <dbl> <dbl>  <dbl> <lgl> #> 1   190     60   269    51   -0.5 TRUE  #> 2   190     50   238   276    0   TRUE  #> 3   190     30   283   206    0   TRUE  #>  #> attr(,\"class\") #> [1] \"wb\" wb_present(wb) wb_present(wb[-2,]) wb_present(wb[, 2:4])"},{"path":"https://kaiaragaki.github.io/blotbench/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kai Aragaki. Author, maintainer.","code":""},{"path":"https://kaiaragaki.github.io/blotbench/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aragaki K (2023). blotbench: Easy, reproducible Westen blot editing. R package version 0.0.0.9000, https://kaiaragaki.github.io/blotbench/.","code":"@Manual{,   title = {blotbench: Easy, reproducible Westen blot editing},   author = {Kai Aragaki},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://kaiaragaki.github.io/blotbench/}, }"},{"path":"https://kaiaragaki.github.io/blotbench/reference/apply_transforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually apply transforms to imgs — apply_transforms","title":"Manually apply transforms to imgs — apply_transforms","text":"functions like wb_present automatically apply transformations, function allows apply manually.","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/apply_transforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually apply transforms to imgs — apply_transforms","text":"","code":"apply_transforms(wb)"},{"path":"https://kaiaragaki.github.io/blotbench/reference/apply_transforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually apply transforms to imgs — apply_transforms","text":"wb wb object","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/col_annot.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set column annotation for a wb object — col_annot","title":"Get or set column annotation for a wb object — col_annot","text":"Get set column annotation wb object","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/col_annot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set column annotation for a wb object — col_annot","text":"","code":"col_annot(x)  col_annot(x) <- value"},{"path":"https://kaiaragaki.github.io/blotbench/reference/col_annot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set column annotation for a wb object — col_annot","text":"x wb object value data.frame column representing variable, row representing lane blot. NOTE: order rows annotate lanes left--right image manipulation, might include mirroring.","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/imgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set images for a wb object — imgs","title":"Get or set images for a wb object — imgs","text":"Get set images wb object","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/imgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set images for a wb object — imgs","text":"","code":"imgs(x)  imgs(x) <- value  wb_add_img(x, imgs, names)"},{"path":"https://kaiaragaki.github.io/blotbench/reference/imgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set images for a wb object — imgs","text":"x wb object value Unused. imgs magick-image containing one images names character vector names length equal imgs. Can NULL row_annot NULL","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/imgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get or set images for a wb object — imgs","text":"Note imgs<- unused - add images using wb_add_img","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/row_annot.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set row annotation for a wb object — row_annot","title":"Get or set row annotation for a wb object — row_annot","text":"Get set row annotation wb object","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/row_annot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set row annotation for a wb object — row_annot","text":"","code":"row_annot(x)  row_annot(x) <- value"},{"path":"https://kaiaragaki.github.io/blotbench/reference/row_annot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set row annotation for a wb object — row_annot","text":"x wb object value Either data.frame single column name, character vector","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/transforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set transforms of a wb object — transforms","title":"Get or set transforms of a wb object — transforms","text":"Get set transforms wb object","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/transforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set transforms of a wb object — transforms","text":"","code":"transforms(x)  transforms(x) <- value"},{"path":"https://kaiaragaki.github.io/blotbench/reference/transforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set transforms of a wb object — transforms","text":"x wb object value data.frame number rows row_annot, null, columns width, height, xpos, ypos, rotate, flip","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a wb object — wb","title":"Create a wb object — wb","text":"Create wb object","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a wb object — wb","text":"","code":"wb(imgs, col_annot = NULL, row_annot = NULL, transforms = NULL)"},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a wb object — wb","text":"imgs vector magick-images col_annot data.frame, row lane column condition row_annot data.frame, row band first column contains band names transforms data.frame, row contains image transformation parameters item imgs. Typically left blank unless know ","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb_present.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a wb object into an image — wb_present","title":"Render a wb object into an image — wb_present","text":"function takes wb object (optionally) row column annotations produces image .","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb_present.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a wb object into an image — wb_present","text":"","code":"wb_present(wb)"},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb_present.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a wb object into an image — wb_present","text":"wb wb object least images transformations","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb_visual_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively edit blots — wb_visual_edit","title":"Interactively edit blots — wb_visual_edit","text":"function helps generate code needed transform blot specifications via Shiny app","code":""},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb_visual_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively edit blots — wb_visual_edit","text":"","code":"wb_visual_edit(wb)"},{"path":"https://kaiaragaki.github.io/blotbench/reference/wb_visual_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively edit blots — wb_visual_edit","text":"wb wb object","code":""}]
